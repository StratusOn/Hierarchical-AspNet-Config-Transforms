<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>
    </ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0853E1EA-24CB-4A73-993D-DFD63A4950B4}</ProjectGuid>
    <ProjectTypeGuids>{349c5851-65df-11da-9384-00065b846f21};{fae04ec0-301f-11d3-bf4b-00c04f79efbc}</ProjectTypeGuids>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>WebApplication2</RootNamespace>
    <AssemblyName>WebApplication2</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <UseIISExpress>true</UseIISExpress>
    <IISExpressSSLPort />
    <IISExpressAnonymousAuthentication />
    <IISExpressWindowsAuthentication />
    <IISExpressUseClassicPipelineMode />
    <UseGlobalApplicationHostFile />
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Web.DynamicData" />
    <Reference Include="System.Web.Entity" />
    <Reference Include="System.Web.ApplicationServices" />
    <Reference Include="System.ComponentModel.DataAnnotations" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Web" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Web.Services" />
    <Reference Include="System.EnterpriseServices" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Config\App1.Debug.config">
      <DependentUpon>App1.config</DependentUpon>
    </None>
    <None Include="Config\App1.Release.config">
      <DependentUpon>App1.config</DependentUpon>
    </None>
    <None Include="Config\App1.UAT.config">
      <DependentUpon>App1.config</DependentUpon>
    </None>
    <None Include="Config\App2.Debug.config">
      <DependentUpon>App2.config</DependentUpon>
    </None>
    <None Include="Config\App2.Release.config">
      <DependentUpon>App2.config</DependentUpon>
    </None>
    <None Include="Config\App2.UAT.config">
      <DependentUpon>App2.config</DependentUpon>
    </None>
    <None Include="Config\Web.Debug.config">
      <DependentUpon>Web.config</DependentUpon>
    </None>
    <None Include="Config\Web.Release.config">
      <DependentUpon>Web.config</DependentUpon>
    </None>
    <None Include="Config\Web.UAT.config">
      <DependentUpon>Web.config</DependentUpon>
    </None>
    <None Include="Web.Debug.config">
      <DependentUpon>Web.config</DependentUpon>
    </None>
    <None Include="Web.Release.config">
      <DependentUpon>Web.config</DependentUpon>
    </None>
    <None Include="Web.UAT.config">
      <DependentUpon>Web.config</DependentUpon>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Content Include="Web.config" />
    <Content Include="Config\Web.config" />
    <Content Include="Config\App1.config" />
    <Content Include="Config\App2.config" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Properties\PublishProfiles\" />
  </ItemGroup>
  <PropertyGroup>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'UAT|AnyCPU'">
    <OutputPath>bin\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <Import Project="$(VSToolsPath)\WebApplications\Microsoft.WebApplication.targets" Condition="'$(VSToolsPath)' != ''" />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v10.0\WebApplications\Microsoft.WebApplication.targets" Condition="false" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{349c5851-65df-11da-9384-00065b846f21}">
        <WebProjectProperties>
          <UseIIS>True</UseIIS>
          <AutoAssignPort>True</AutoAssignPort>
          <DevelopmentServerPort>26250</DevelopmentServerPort>
          <DevelopmentServerVPath>/</DevelopmentServerVPath>
          <IISUrl>http://localhost:26250/</IISUrl>
          <NTLMAuthentication>False</NTLMAuthentication>
          <UseCustomServer>False</UseCustomServer>
          <CustomServerUrl>
          </CustomServerUrl>
          <SaveServerSettingsInUserFile>False</SaveServerSettingsInUserFile>
        </WebProjectProperties>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <!--
    Customizations to the Web Publishing pipeline to add support for transforming files other than the internally hardcoded web.config.
    This assumes that baseline config files follow this naming pattern (i.e. there should be no . in the name): filename.config. For example:
      - Good file: app1.config
      - Bad file: app1.something.config
    
    Source: C:\Program Files (x86)\MSBuild\Microsoft\VisualStudio\v14.0\Web\Microsoft.Web.Publishing.targets
  -->
  <PropertyGroup>
    <!-- We want to include all files with the extension .config. -->
    <AllConfigFiles Condition="'$(AllConfigFiles)' == ''">.config</AllConfigFiles>
    <!-- The names of the custom targets that we'd like injected into the Web Publishing pipeline. -->
    <_CustomOnAfterCollectWebConfigsToTransform>CustomOnAfterCollectWebConfigsToTransform</_CustomOnAfterCollectWebConfigsToTransform>
    <_CustomOnAfterCollectFilesForProfileTransformWebConfigs>CustomOnAfterCollectFilesForProfileTransformWebConfigs</_CustomOnAfterCollectFilesForProfileTransformWebConfigs>
    <_CustomOnAfterMarkWebConfigAssistFilesAsExclude>CustomOnAfterMarkWebConfigAssistFilesAsExclude</_CustomOnAfterMarkWebConfigAssistFilesAsExclude>
    <!-- Add an "OnAfterCollectWebConfigsToTransform" target after an existing one, if any. -->
    <OnAfterCollectWebConfigsToTransform Condition="'$(OnAfterCollectWebConfigsToTransform)' != ''">$(OnAfterCollectWebConfigsToTransform),$(_CustomOnAfterCollectWebConfigsToTransform)</OnAfterCollectWebConfigsToTransform>
    <OnAfterCollectWebConfigsToTransform Condition="'$(OnAfterCollectWebConfigsToTransform)' == ''">$(_CustomOnAfterCollectWebConfigsToTransform)</OnAfterCollectWebConfigsToTransform>
    <!-- Add an "OnAfterCollectFilesForProfileTransformWebConfigs" target after an existing one, if any. -->
    <OnAfterCollectFilesForProfileTransformWebConfigs Condition="'$(OnAfterCollectFilesForProfileTransformWebConfigs)' != ''">$(OnAfterCollectFilesForProfileTransformWebConfigs);$(_CustomOnAfterCollectFilesForProfileTransformWebConfigs)</OnAfterCollectFilesForProfileTransformWebConfigs>
    <OnAfterCollectFilesForProfileTransformWebConfigs Condition="'$(OnAfterCollectFilesForProfileTransformWebConfigs)' == ''">$(_CustomOnAfterCollectFilesForProfileTransformWebConfigs)</OnAfterCollectFilesForProfileTransformWebConfigs>
    <!-- Add an "OnAfterMarkWebConfigAssistFilesAsExclude" target after an existing one, if any. -->
    <OnAfterMarkWebConfigAssistFilesAsExclude Condition="'$(OnAfterMarkWebConfigAssistFilesAsExclude)' != ''">$(OnAfterMarkWebConfigAssistFilesAsExclude);$(_CustomOnAfterMarkWebConfigAssistFilesAsExclude)</OnAfterMarkWebConfigAssistFilesAsExclude>
    <OnAfterMarkWebConfigAssistFilesAsExclude Condition="'$(OnAfterMarkWebConfigAssistFilesAsExclude)' == ''">$(_CustomOnAfterMarkWebConfigAssistFilesAsExclude)</OnAfterMarkWebConfigAssistFilesAsExclude>
  </PropertyGroup>
  <Target Name="CustomOnAfterCollectWebConfigsToTransform">
    <!-- Add .config files other than web.config which have already been collected by the "CollectWebConfigsToTransform" target. -->
    <ItemGroup>
      <WebConfigsToTransform Include="@(FilesForPackagingFromProject)" Condition="'%(FilesForPackagingFromProject.Extension)'=='$(AllConfigFiles)' &#xD;&#xA;                                        AND '$([System.String]::new(%(FilesForPackagingFromProject.Filename)).Contains(&quot;.&quot;))'=='false' &#xD;&#xA;                                        AND '%(FilesForPackagingFromProject.Filename)%(FilesForPackagingFromProject.Extension)'!='$(ProjectConfigFileName)'">
        <TransformFile>$([System.String]::new($(WebPublishPipelineProjectDirectory)\$([System.IO.Path]::GetDirectoryName($([System.String]::new(%(DestinationRelativePath)))))).TrimEnd('\'))\%(FilesForPackagingFromProject.Filename).$(Configuration)$(_ProjectConfigFileExtension)</TransformFile>
        <TransformOriginalFolder>$(TransformWebConfigIntermediateLocation)\original</TransformOriginalFolder>
        <TransformFileFolder>$(TransformWebConfigIntermediateLocation)\assist</TransformFileFolder>
        <TransformOutputFile>$(TransformWebConfigIntermediateLocation)\transformed\%(DestinationRelativePath)</TransformOutputFile>
        <TransformScope>$([System.IO.Path]::GetFullPath($(WPPAllFilesInSingleFolder)\%(DestinationRelativePath)))</TransformScope>
      </WebConfigsToTransform>
      <_WebConfigsToTransformOuputs Include="@(WebConfigsToTransform->'%(TransformOutputFile)')" />
    </ItemGroup>
  </Target>
  <Target Name="CustomOnAfterCollectFilesForProfileTransformWebConfigs">
    <!-- Add .config files other than web.config which have already been collected by the "CollectFilesForProfileTransformWebConfigs" target. -->
    <ItemGroup>
      <ProfileWebConfigsToTransform Include="@(FilesForPackagingFromProject)" Condition="'%(FilesForPackagingFromProject.Extension)'=='$(AllConfigFiles)' &#xD;&#xA;                                               AND '$([System.String]::new(%(FilesForPackagingFromProject.Filename)).Contains(&quot;.&quot;))'=='false' &#xD;&#xA;                                               AND '%(FilesForPackagingFromProject.Filename)%(FilesForPackagingFromProject.Extension)'!='$(ProjectConfigFileName)'">
        <TransformFile>$(WebPublishPipelineProjectDirectory)\$([System.IO.Path]::GetDirectoryName($([System.String]::new(%(DestinationRelativePath)))))\%(FilesForPackagingFromProject.Filename).$(Configuration)$(_ProjectConfigFileExtension)</TransformFile>
        <TransformOriginalFolder>$(ProfileTransformWebConfigIntermediateLocation)\original</TransformOriginalFolder>
        <TransformFileFolder>$(ProfileTransformWebConfigIntermediateLocation)\assist</TransformFileFolder>
        <TransformOutputFile>$(ProfileTransformWebConfigIntermediateLocation)\transformed\%(DestinationRelativePath)</TransformOutputFile>
        <TransformScope>$([System.IO.Path]::GetFullPath($(WPPAllFilesInSingleFolder)\%(DestinationRelativePath)))</TransformScope>
      </ProfileWebConfigsToTransform>
      <_ProfileWebConfigsToTransformOuputs Include="@(ProfileWebConfigsToTransform->'%(TransformOutputFile)')" />
    </ItemGroup>
  </Target>
  <Target Name="CustomOnAfterMarkWebConfigAssistFilesAsExclude">
    <!-- Changed the condition so that all config's assistant files are considered and not just web.config's. -->
    <ItemGroup>
      <_AllProjectConfigsInFilesCustom Include="@(FilesForPackagingFromProject)" Condition="'%(FilesForPackagingFromProject.Extension)'=='$(AllConfigFiles)' &#xD;&#xA;                                                  AND '%(FilesForPackagingFromProject.Filename)%(FilesForPackagingFromProject.Extension)'!='$(ProjectConfigFileName)'" />
    </ItemGroup>
    <!-- Mark all the assistant files whose DependsOn is *.config to Exclude -->
    <FilterByItems PipelineItems="@(FilesForPackagingFromProject)" SourceMetadataName="DependentUpon" FilterMetadataName="DestinationRelativePath" Filter="@(_AllProjectConfigsInFilesCustom)" Condition="$(ExcludeTransformAssistFilesFromPublish)">
      <Output TaskParameter="InFilter" ItemName="_NeedtoMarkasExclude_ConfigAssistFiles_Custom" />
    </FilterByItems>
    <ItemGroup>
      <!-- Mark all the assistant file whose DependsOn is *.config to Exclude -->
      <FilesForPackagingFromProject Remove="@(_NeedtoMarkasExclude_ConfigAssistFiles_Custom)" Condition="$(ExcludeTransformAssistFilesFromPublish)">
      </FilesForPackagingFromProject>
      <FilesForPackagingFromProject Include="@(_NeedtoMarkasExclude_ConfigAssistFiles_Custom)" Condition="$(ExcludeTransformAssistFilesFromPublish)">
        <Exclude>True</Exclude>
      </FilesForPackagingFromProject>
    </ItemGroup>
  </Target>
</Project>